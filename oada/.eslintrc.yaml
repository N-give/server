root: true

extends:
  - plugin:node/recommended
  - plugin:github/recommended
  - plugin:github/typescript
  - plugin:promise/recommended
  - plugin:regexp/recommended
  - plugin:array-func/recommended
  - plugin:optimize-regex/recommended
  - plugin:import/recommended
  - plugin:import/typescript
  - plugin:unicorn/recommended
  - plugin:security/recommended
  - plugin:sonarjs/recommended
  - xo
  - xo-typescript
  - prettier

plugins:
  - node
  - github
  - promise
  - regexp
  - array-func
  - optimize-regex
  - no-constructor-bind
  - import
  - unicorn
  - security
  - no-secrets
  - sonarjs

parser: '@typescript-eslint/parser'

parserOptions:
  ecmaVersion: 2020
  project:
    - './tsconfig.json'
    - './services/*/tsconfig.json'
    - './lib/*/tsconfig.json'

rules:
  sonarjs/no-duplicate-string: [warn, 5]
  eslint-comments/no-unused-disable: off
  import/extensions: off
  node/no-unpublished-import: off
  spaced-comment: [error, always, markers: [/, //]]
  filenames/match-regex: off
  unicorn/filename-case: off
  i18n-text/no-en: off
  eslint-comments/no-use: off
  no-secrets/no-secrets: error
  no-empty-label: off
  no-warning-comments: off
  node/no-missing-import: off
  import/no-unresolved: off
  unicorn/prefer-spread: off
  no-constructor-bind/no-constructor-bind: error
  no-constructor-bind/no-constructor-state: error
  sort-imports: [warn, { allowSeparatedGroups: true }]
  '@typescript-eslint/restrict-template-expressions': off
  '@typescript-eslint/no-shadow': warn
  '@typescript-eslint/naming-convention':
    [
      error,
      { selector: default, format: [camelCase] },
      { selector: objectLiteralProperty, format: null },
      { selector: typeProperty, format: null },

      { selector: variable, format: [camelCase, UPPER_CASE] },
      { selector: parameter, format: [camelCase], leadingUnderscore: allow },

      {
        selector: memberLike,
        modifiers: [private],
        format: [camelCase],
        leadingUnderscore: require,
      },

      { selector: typeLike, format: [PascalCase] },
    ]
